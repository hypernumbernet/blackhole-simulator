#version 450 core

layout (local_size_x = 128) in;

layout (std430, binding = 0) buffer coordinate_block
{
    double coordinate[];
};

layout(std430, binding = 1) buffer velocity_block
{
    double velocity[];
};

layout(std430, binding = 2) buffer mass_block
{
    double mass[];
};

layout(std430, binding = 3) buffer param_block
{
    double timePerFrame;
    double numberOfPerticles;
    double GConstant;
};

void main()
{
    const uint i = gl_GlobalInvocationID.x;
    uint num = uint(numberOfPerticles);
    double time_g = timePerFrame * GConstant;
    uint i3 = i * 3;
    uint j3;
    double delta_x, delta_y, delta_z, r, inv, theta;

    double force_x = 0.0;
    double force_y = 0.0;
    double force_z = 0.0;

    for (int j = 0; j < num; j++)
    {
        if (i == j)
            continue;

        j3 = j * 3;

        delta_x = coordinate[j3    ] - coordinate[i3    ];
        delta_y = coordinate[j3 + 1] - coordinate[i3 + 1];
        delta_z = coordinate[j3 + 2] - coordinate[i3 + 2];

        r = sqrt(delta_x * delta_x + delta_y * delta_y + delta_z * delta_z);
        if (r <= 0.0)
            continue;

        inv = 1.0 / r;
        theta = inv * inv * inv * time_g * mass[j];

        delta_x *= theta;
        delta_y *= theta;
        delta_z *= theta;

        force_x += delta_x;
        force_y += delta_y;
        force_z += delta_z;
    }
    velocity[i3    ] += force_x;
    velocity[i3 + 1] += force_y;
    velocity[i3 + 2] += force_z;
}
